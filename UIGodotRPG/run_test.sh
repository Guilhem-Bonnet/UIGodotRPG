#!/bin/bash
# Lance directement le TestEnvironment avec le DLL d√©j√† compil√©
# Contournement du bug MSBuild de l'√©diteur Godot

set -e

echo "üéÆ Lancement du TestEnvironment..."

# V√©rifier que le DLL existe et compiler si n√©cessaire
DLL_PATH=".godot/mono/temp/bin/Debug/Front-BR-RPG.dll"
if [ ! -f "$DLL_PATH" ]; then
    echo "‚ö†Ô∏è  DLL manquant, compilation..."
    dotnet build --nologo
else
    # V√©rifier si des fichiers .cs sont plus r√©cents que le DLL
    NEWER_FILES=$(find Scripts -name "*.cs" -newer "$DLL_PATH" 2>/dev/null | wc -l)
    if [ $NEWER_FILES -gt 0 ]; then
        echo "üîÑ Code modifi√©, recompilation..."
        dotnet build --nologo
    else
        echo "‚úÖ DLL √† jour"
    fi
fi

#!/bin/bash

# Chemin vers le binaire Godot
GODOT_PATH="/home/guilhem/bin/Godot_v4.5.1-stable_mono_linux_x86_64/Godot_v4.5.1-stable_mono_linux.x86_64"

if [ ! -f "$GODOT_PATH" ]; then
    echo "‚ùå Godot non trouv√©: $GODOT_PATH"
    exit 1
fi

# Lancer directement la sc√®ne TestEnvironment
echo "‚ñ∂Ô∏è  D√©marrage de TestEnvironment.tscn..."
echo ""
echo "üìã Contr√¥les du simulateur:"
echo "   ESPACE = Play/Pause auto-combat"
echo "   1 = Test attaque"
echo "   2 = Test soin"
echo "   3 = Test mort"
echo "   4 = Test r√©surrection"
echo "   5 = Test effet de statut"
echo ""

$GODOT_PATH --path "$(pwd)" res://Scenes/TestEnvironment.tscn
